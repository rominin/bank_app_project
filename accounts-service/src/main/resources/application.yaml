server:
  port: 8081

spring:
  application:
    name: accounts-service

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/bank-app

      client:
        registration:
          account-service:
            authorizationGrantType: client_credentials
            provider: keycloak
            client-id: accounts-service_m2m
            client-secret: vVwOHF8UY8Oah9a3aZGSt0GgyK1BflDI
        provider:
          keycloak:
            token-uri: http://localhost:8080/realms/bank-app/protocol/openid-connect/token

  datasource:
    url: jdbc:postgresql://localhost:5432/bank_db
    username: postgres
    password: postgres
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  flyway:
    enabled: true
    schemas: accounts_schema
    baseline-on-migrate: true
    locations: classpath:db/migration

  sql:
    init:
      platform: postgres

security:
  jwt:
    secret: wj38dKSk4Xpe49TrsTcv82yNvmz1qKwLZnUp1fZ5U7A=
    expiration-minutes: 60

management:
  endpoints:
    web:
      exposure:
        include: health ,  refresh
  endpoint:
    health:
      show-details: always
logging:
  level:
    org.springframework.security: DEBUG

resilience4j:
  circuitbreaker:
    instances:
      notifyCircuitBreaker:
        register-health-indicator: true
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 5s

  retry:
    instances:
      notifyRetry:
        max-attempts: 3
        wait-duration: 1s

# properties previously residing in consul:
notification-service:
  url: http://localhost:8087/notify